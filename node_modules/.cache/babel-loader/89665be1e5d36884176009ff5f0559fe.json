{"ast":null,"code":"import React from\"react\";import ReactMarkdown from'react-markdown';import{makeStyles}from\"@material-ui/core/styles\";// @material-ui/icons\n// core components\nimport GridContainer from\"components/Grid/GridContainer.js\";import GridItem from\"components/Grid/GridItem.js\";import Header from\"components/Header/Header.js\";import HeaderLinks from\"components/Header/HeaderLinks.js\";import styles from\"assets/jss/material-kit-react/views/userDocPage.js\";// Sections for this page\nimport Sidebar from\"components/Sidebar/Technical/Sidebar\";var useStyles=makeStyles(styles);var markdown='Cette section à pour but d’établir un guide du développeur qui permettrait à toute personne rejoignant'+'l\\'équipe de contribuer au projet en comprenant son état, sa structure, et la façon de contribuer, sans '+'avoir à nous solliciter pour obtenir les informations nécessaires.\\n'+'TechnoServs est une solution de hosting de serveurs de jeux vidéos dans le cloud, avec des offres à la demande '+'pour chacun, en simplifiant chaques étapes du processus.\\n'+'Notre architecture est basé sur un backend en language Go et un frontend en VueJS avec le framework Quasar. (voir Architecture)'+'Nous utilisons GitHub comme outils de versioning et organisons nos tâches via Trello. Pour communiquer, nous utilisons Slack et Hangout. '+'(voir Outils d’organisation et de communication)'+'Notre serveur utilise l’API docker afin de gérer les containers, qui eux héberge un serveur de jeu. Nous avons mis à disposition une API'+'afin de permettre à l’application web de gérer les serveurs de jeux. (voir Présentation des technologies)\\n'+'La documentation de l’API est généré par Postman, elle reprend tous les endpoints permettant de gérer les offres, les utilisateurs et les'+'serveurs de jeux. (voir API et interfaces)\\n'+'Le linter officiel de golang est utilisé pour le backend. Le front utilise Eslint. (voir Norme du code)\\n'+'Le backend utilise la librairie standard de test de golang et les github action afin d\\'automatiser les tests unitaires.'+' Côté frontend le framework Jest a été intégré. (voir Tests)\\n'+'Le déploiement de la solution est automatisé via github action.\\n'+'Le dashboard est déployé sur Netlify. Le site se trouve sur le lien suivant: technoservs.ichbinkour.eu. (voir Déploiement de la solution)\\n';export default function GettingStartedTech(props){var classes=useStyles();var rest=Object.assign({},props);return/*#__PURE__*/React.createElement(\"div\",{className:classes.main},/*#__PURE__*/React.createElement(Header,Object.assign({color:\"white\",brand:\"TechnoServs\",fixed:true,rightLinks:/*#__PURE__*/React.createElement(HeaderLinks,null),changeColorOnScroll:{height:200,color:\"white\"}},rest)),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(GridContainer,null,/*#__PURE__*/React.createElement(GridItem,null,/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null)),/*#__PURE__*/React.createElement(GridItem,null,/*#__PURE__*/React.createElement(Sidebar,null)),/*#__PURE__*/React.createElement(GridItem,{style:{marginLeft:\"220px\"}},/*#__PURE__*/React.createElement(\"h1\",null,\"Documentation Technique\"),/*#__PURE__*/React.createElement(\"img\",{src:\"https://i.imgur.com/RAXMGMx.png\",className:classes.img}),/*#__PURE__*/React.createElement(ReactMarkdown,{source:markdown}),/*#__PURE__*/React.createElement(\"div\",null)))));}","map":{"version":3,"sources":["/Users/auguste/Documents/Dev/EIP/Github/Documentation/src/views/Blog/TechnicalDocumentation/GettingStartedTech.js"],"names":["React","ReactMarkdown","makeStyles","GridContainer","GridItem","Header","HeaderLinks","styles","Sidebar","useStyles","markdown","GettingStartedTech","props","classes","rest","main","height","color","marginLeft","img"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,aAAP,KAA0B,gBAA1B,CACA,OAASC,UAAT,KAA2B,0BAA3B,CAEA;AAEA;AACA,MAAOC,CAAAA,aAAP,KAA0B,kCAA1B,CACA,MAAOC,CAAAA,QAAP,KAAqB,6BAArB,CACA,MAAOC,CAAAA,MAAP,KAAmB,6BAAnB,CACA,MAAOC,CAAAA,WAAP,KAAwB,kCAAxB,CAEA,MAAOC,CAAAA,MAAP,KAAmB,oDAAnB,CAEA;AAEA,MAAOC,CAAAA,OAAP,KAAoB,sCAApB,CACA,GAAMC,CAAAA,SAAS,CAAGP,UAAU,CAACK,MAAD,CAA5B,CACA,GAAMG,CAAAA,QAAQ,CACV,yGACA,0GADA,CAEA,sEAFA,CAIA,iHAJA,CAKA,4DALA,CAOA,iIAPA,CASA,2IATA,CAUA,kDAVA,CAYA,0IAZA,CAaA,6GAbA,CAeA,2IAfA,CAgBA,8CAhBA,CAkBA,2GAlBA,CAoBA,0HApBA,CAqBA,gEArBA,CAuBA,mEAvBA,CAyBA,6IA1BJ,CA6BA,cAAe,SAASC,CAAAA,kBAAT,CAA4BC,KAA5B,CAAmC,CAC9C,GAAMC,CAAAA,OAAO,CAAGJ,SAAS,EAAzB,CAD8C,GAEnCK,CAAAA,IAFmC,kBAE1BF,KAF0B,EAG9C,mBACI,2BAAK,SAAS,CAAEC,OAAO,CAACE,IAAxB,eACI,oBAAC,MAAD,gBACI,KAAK,CAAC,OADV,CAEI,KAAK,CAAC,aAFV,CAGI,KAAK,KAHT,CAII,UAAU,cAAE,oBAAC,WAAD,MAJhB,CAKI,mBAAmB,CAAE,CACjBC,MAAM,CAAE,GADS,CAEjBC,KAAK,CAAE,OAFU,CALzB,EASQH,IATR,EADJ,cAYI,4CACI,oBAAC,aAAD,mBACI,oBAAC,QAAD,mBACI,8BADJ,cACU,8BADV,cACgB,8BADhB,cACsB,8BADtB,CADJ,cAII,oBAAC,QAAD,mBACI,oBAAC,OAAD,MADJ,CAJJ,cAOI,oBAAC,QAAD,EAAW,KAAK,CAAE,CAACI,UAAU,CAAE,OAAb,CAAlB,eACI,wDADJ,cAEI,2BAAK,GAAG,CAAC,iCAAT,CAA2C,SAAS,CAAEL,OAAO,CAACM,GAA9D,EAFJ,cAGI,oBAAC,aAAD,EAAe,MAAM,CAAET,QAAvB,EAHJ,cAII,+BAJJ,CAPJ,CADJ,CAZJ,CADJ,CAgCH","sourcesContent":["import React from \"react\";\nimport ReactMarkdown from 'react-markdown'\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n// @material-ui/icons\n\n// core components\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport Header from \"components/Header/Header.js\";\nimport HeaderLinks from \"components/Header/HeaderLinks.js\";\n\nimport styles from \"assets/jss/material-kit-react/views/userDocPage.js\";\n\n// Sections for this page\n\nimport Sidebar from \"components/Sidebar/Technical/Sidebar\";\nconst useStyles = makeStyles(styles);\nconst markdown =\n    'Cette section à pour but d’établir un guide du développeur qui permettrait à toute personne rejoignant' +\n    'l\\'équipe de contribuer au projet en comprenant son état, sa structure, et la façon de contribuer, sans ' +\n    'avoir à nous solliciter pour obtenir les informations nécessaires.\\n' +\n\n    'TechnoServs est une solution de hosting de serveurs de jeux vidéos dans le cloud, avec des offres à la demande ' +\n    'pour chacun, en simplifiant chaques étapes du processus.\\n' +\n\n    'Notre architecture est basé sur un backend en language Go et un frontend en VueJS avec le framework Quasar. (voir Architecture)' +\n\n    'Nous utilisons GitHub comme outils de versioning et organisons nos tâches via Trello. Pour communiquer, nous utilisons Slack et Hangout. ' +\n    '(voir Outils d’organisation et de communication)' +\n\n    'Notre serveur utilise l’API docker afin de gérer les containers, qui eux héberge un serveur de jeu. Nous avons mis à disposition une API' +\n    'afin de permettre à l’application web de gérer les serveurs de jeux. (voir Présentation des technologies)\\n' +\n\n    'La documentation de l’API est généré par Postman, elle reprend tous les endpoints permettant de gérer les offres, les utilisateurs et les' +\n    'serveurs de jeux. (voir API et interfaces)\\n' +\n\n    'Le linter officiel de golang est utilisé pour le backend. Le front utilise Eslint. (voir Norme du code)\\n' +\n\n    'Le backend utilise la librairie standard de test de golang et les github action afin d\\'automatiser les tests unitaires.' +\n    ' Côté frontend le framework Jest a été intégré. (voir Tests)\\n'+\n\n    'Le déploiement de la solution est automatisé via github action.\\n' +\n\n    'Le dashboard est déployé sur Netlify. Le site se trouve sur le lien suivant: technoservs.ichbinkour.eu. (voir Déploiement de la solution)\\n';\n\n\nexport default function GettingStartedTech(props) {\n    const classes = useStyles();\n    const { ...rest } = props;\n    return (\n        <div className={classes.main}>\n            <Header\n                color=\"white\"\n                brand=\"TechnoServs\"\n                fixed\n                rightLinks={<HeaderLinks />}\n                changeColorOnScroll={{\n                    height: 200,\n                    color: \"white\"\n                }}\n                {...rest}\n            />\n            <div>\n                <GridContainer>\n                    <GridItem>\n                        <br /><br /><br /><br />\n                    </GridItem>\n                    <GridItem>\n                        <Sidebar/>\n                    </GridItem>\n                    <GridItem  style={{marginLeft: \"220px\"}}>\n                        <h1>Documentation Technique</h1>\n                        <img src=\"https://i.imgur.com/RAXMGMx.png\" className={classes.img}/>\n                        <ReactMarkdown source={markdown}/>\n                        <div>\n                        </div>\n                    </GridItem>\n                </GridContainer>\n            </div>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}