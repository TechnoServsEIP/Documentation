{"ast":null,"code":"var _jsxFileName = \"/Users/auguste/Documents/Dev/EIP/Github/Documentation/src/views/Blog/TechnicalDocumentation/Norms.js\";\nimport React from \"react\";\nimport ReactMarkdown from 'react-markdown';\nimport { makeStyles } from \"@material-ui/core/styles\"; // @material-ui/icons\n// core components\n\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport Header from \"components/Header/Header.js\";\nimport HeaderLinks from \"components/Header/HeaderLinks.js\";\nimport styles from \"assets/jss/material-kit-react/views/userDocPage.js\"; // Sections for this page\n\nimport Sidebar from \"components/Sidebar/Technical/Sidebar\";\nvar useStyles = makeStyles(styles);\nvar markdown = '## Norme du code\\n' + '### **Backend**\\n' + '#### Pour la norme nous utilisons le linter officiel de golang https://github.com/golang/lint\\n' + '### **Dashboard**\\n' + '#### Pour le dashboard, nous codons à la norme Eslint pour VueJS avec le package eslint-plugin-vue. Ce package nous ' + '#### permet de repérer les erreurs de syntaxe, les mauvaises utilisations des directives VueJS et les violations de ' + '#### Style (trop de caractère sur une ligne par exemple).\\n' + '\\n' + '#### Pour plus d’informations sur les règles, voici le lien vers la documentation: https://eslint.vuejs.org\\n' + '\\n' + 'Tests \\n' + 'Backend\\n' + 'Pour le serveur nous utilisons la librairie standard de test de golang et les github action. Lors d’un pull request ' + 'les tests sont automatiquement réalisés grâce au fichier ci.yml.\\n' + 'Les tests sont rédigés de manière idiomatique.\\n' + 'Dashboard\\n' + 'Pour l’application web, nous avons intégré Jest. Jest permet de faire des tests sur différent technologie ' + 'JavaScript qui met l\\'accent sur la simplicité.\\n' + '\\n' + 'Pour plus d’informations sur Jest: https://jestjs.io/\\n';\nexport default function Norms(props) {\n  var classes = useStyles();\n  var rest = Object.assign({}, props);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.main\n  }, /*#__PURE__*/React.createElement(Header, Object.assign({\n    color: \"white\",\n    brand: \"TechnoServs\",\n    fixed: true,\n    rightLinks: /*#__PURE__*/React.createElement(HeaderLinks, null),\n    changeColorOnScroll: {\n      height: 200,\n      color: \"white\"\n    }\n  }, rest)), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(GridContainer, null, /*#__PURE__*/React.createElement(GridItem, null, /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"br\", null)), /*#__PURE__*/React.createElement(GridItem, null, /*#__PURE__*/React.createElement(Sidebar, null)), /*#__PURE__*/React.createElement(GridItem, {\n    style: {\n      marginLeft: \"220px\"\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", null, \"Documentation Technique\"), /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(ReactMarkdown, {\n    source: markdown\n  }), /*#__PURE__*/React.createElement(\"div\", null)))));\n}","map":{"version":3,"sources":["/Users/auguste/Documents/Dev/EIP/Github/Documentation/src/views/Blog/TechnicalDocumentation/Norms.js"],"names":["React","ReactMarkdown","makeStyles","GridContainer","GridItem","Header","HeaderLinks","styles","Sidebar","useStyles","markdown","Norms","props","classes","rest","main","height","color","marginLeft"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,SAASC,UAAT,QAA2B,0BAA3B,C,CAEA;AAEA;;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,WAAP,MAAwB,kCAAxB;AAEA,OAAOC,MAAP,MAAmB,oDAAnB,C,CAEA;;AAEA,OAAOC,OAAP,MAAoB,sCAApB;AACA,IAAMC,SAAS,GAAGP,UAAU,CAACK,MAAD,CAA5B;AACA,IAAMG,QAAQ,GACV,uBACA,mBADA,GAEA,iGAFA,GAGA,qBAHA,GAIA,sHAJA,GAKA,sHALA,GAMA,6DANA,GAOA,IAPA,GAQA,+GARA,GASA,IATA,GAUA,UAVA,GAWA,WAXA,GAYA,sHAZA,GAaA,oEAbA,GAcA,kDAdA,GAeA,aAfA,GAgBA,4GAhBA,GAiBA,mDAjBA,GAkBA,IAlBA,GAmBA,yDApBJ;AAuBA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACjC,MAAMC,OAAO,GAAGJ,SAAS,EAAzB;AADiC,MAEtBK,IAFsB,qBAEbF,KAFa;AAGjC,sBACI;AAAK,IAAA,SAAS,EAAEC,OAAO,CAACE;AAAxB,kBACI,oBAAC,MAAD;AACI,IAAA,KAAK,EAAC,OADV;AAEI,IAAA,KAAK,EAAC,aAFV;AAGI,IAAA,KAAK,MAHT;AAII,IAAA,UAAU,eAAE,oBAAC,WAAD,OAJhB;AAKI,IAAA,mBAAmB,EAAE;AACjBC,MAAAA,MAAM,EAAE,GADS;AAEjBC,MAAAA,KAAK,EAAE;AAFU;AALzB,KASQH,IATR,EADJ,eAYI,8CACI,oBAAC,aAAD,qBACI,oBAAC,QAAD,qBACI,+BADJ,eACU,+BADV,eACgB,+BADhB,eACsB,+BADtB,CADJ,eAII,oBAAC,QAAD,qBACI,oBAAC,OAAD,OADJ,CAJJ,eAOI,oBAAC,QAAD;AAAW,IAAA,KAAK,EAAE;AAACI,MAAAA,UAAU,EAAE;AAAb;AAAlB,kBACI,0DADJ,eAEI,+BAFJ,eAGI,oBAAC,aAAD;AAAe,IAAA,MAAM,EAAER;AAAvB,IAHJ,eAII,gCAJJ,CAPJ,CADJ,CAZJ,CADJ;AAgCH","sourcesContent":["import React from \"react\";\nimport ReactMarkdown from 'react-markdown'\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n// @material-ui/icons\n\n// core components\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport Header from \"components/Header/Header.js\";\nimport HeaderLinks from \"components/Header/HeaderLinks.js\";\n\nimport styles from \"assets/jss/material-kit-react/views/userDocPage.js\";\n\n// Sections for this page\n\nimport Sidebar from \"components/Sidebar/Technical/Sidebar\";\nconst useStyles = makeStyles(styles);\nconst markdown =\n    '## Norme du code\\n' +\n    '### **Backend**\\n' +\n    '#### Pour la norme nous utilisons le linter officiel de golang https://github.com/golang/lint\\n' +\n    '### **Dashboard**\\n' +\n    '#### Pour le dashboard, nous codons à la norme Eslint pour VueJS avec le package eslint-plugin-vue. Ce package nous ' +\n    '#### permet de repérer les erreurs de syntaxe, les mauvaises utilisations des directives VueJS et les violations de ' +\n    '#### Style (trop de caractère sur une ligne par exemple).\\n' +\n    '\\n' +\n    '#### Pour plus d’informations sur les règles, voici le lien vers la documentation: https://eslint.vuejs.org\\n' +\n    '\\n' +\n    'Tests \\n' +\n    'Backend\\n' +\n    'Pour le serveur nous utilisons la librairie standard de test de golang et les github action. Lors d’un pull request ' +\n    'les tests sont automatiquement réalisés grâce au fichier ci.yml.\\n' +\n    'Les tests sont rédigés de manière idiomatique.\\n' +\n    'Dashboard\\n' +\n    'Pour l’application web, nous avons intégré Jest. Jest permet de faire des tests sur différent technologie ' +\n    'JavaScript qui met l\\'accent sur la simplicité.\\n' +\n    '\\n' +\n    'Pour plus d’informations sur Jest: https://jestjs.io/\\n';\n\n\nexport default function Norms(props) {\n    const classes = useStyles();\n    const { ...rest } = props;\n    return (\n        <div className={classes.main}>\n            <Header\n                color=\"white\"\n                brand=\"TechnoServs\"\n                fixed\n                rightLinks={<HeaderLinks />}\n                changeColorOnScroll={{\n                    height: 200,\n                    color: \"white\"\n                }}\n                {...rest}\n            />\n            <div>\n                <GridContainer>\n                    <GridItem>\n                        <br /><br /><br /><br />\n                    </GridItem>\n                    <GridItem>\n                        <Sidebar/>\n                    </GridItem>\n                    <GridItem  style={{marginLeft: \"220px\"}}>\n                        <h1>Documentation Technique</h1>\n                        <br/>\n                        <ReactMarkdown source={markdown}/>\n                        <div>\n                        </div>\n                    </GridItem>\n                </GridContainer>\n            </div>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}