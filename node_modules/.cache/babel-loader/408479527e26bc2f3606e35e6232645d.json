{"ast":null,"code":"var _jsxFileName = \"/Users/auguste/Documents/Dev/EIP/Github/Documentation/src/views/Blog/TechnicalDocumentation/Tools.js\";\nimport React from \"react\";\nimport ReactMarkdown from 'react-markdown';\nimport { makeStyles } from \"@material-ui/core/styles\"; // @material-ui/icons\n// core components\n\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport Header from \"components/Header/Header.js\";\nimport HeaderLinks from \"components/Header/HeaderLinks.js\";\nimport styles from \"assets/jss/material-kit-react/views/userDocPage.js\"; // Sections for this page\n\nimport Sidebar from \"components/Sidebar/Technical/Sidebar\";\nvar useStyles = makeStyles(styles);\nexport default function Tools(props) {\n  var classes = useStyles();\n  var rest = Object.assign({}, props);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.main\n  }, /*#__PURE__*/React.createElement(Header, Object.assign({\n    color: \"white\",\n    brand: \"TechnoServs\",\n    fixed: true,\n    rightLinks: /*#__PURE__*/React.createElement(HeaderLinks, null),\n    changeColorOnScroll: {\n      height: 200,\n      color: \"white\"\n    }\n  }, rest)), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(GridContainer, null, /*#__PURE__*/React.createElement(GridItem, null, /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"br\", null)), /*#__PURE__*/React.createElement(GridItem, null, /*#__PURE__*/React.createElement(Sidebar, null)), /*#__PURE__*/React.createElement(GridItem, {\n    style: {\n      marginLeft: \"220px\"\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", null, \"Documentation Technique\"), /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"h2\", null, \"Outils d'organisation et de communication\"), /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"h3\", null, /*#__PURE__*/React.createElement(\"b\", null, \"Github\")), /*#__PURE__*/React.createElement(\"h4\", null, \"Les outils d\\u2019organisation de TechnoServs sont la feature Issue de \", /*#__PURE__*/React.createElement(\"b\", null, \"GitHub\"), \". Lorsque nous souhaitons impl\\xE9menter une nouvelle feature, nous cr\\xE9ons une Issue comme ci-dessous.\"), /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"img\", {\n    src: \"https://i.imgur.com/9AJDDMF.png\",\n    className: classes.img4\n  }), /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"h4\", null, \"Dans cet exemple, nous mettons une description qui r\\xE9sume la t\\xE2che en une phrase, ainsi que la charge estim\\xE9e, ainsi que la \\u201C\", /*#__PURE__*/React.createElement(\"b\", null, \"Definition of Done\"), \"\\u201D qui correspond \\xE0 ceux que doit fonctionner une fois que la t\\xE2che est termin\\xE9e.\"), /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"img\", {\n    src: \"https://i.imgur.com/ZKUArm0.png\",\n    className: classes.img3\n  }), /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"h4\", null, \"Une fois l\\u2019issue cr\\xE9\\xE9e, elle se retrouve dans la colonne \\u201C\", /*#__PURE__*/React.createElement(\"b\", null, \"To Do\"), \"\\u201D dans notre tableau des issues. Ceci nous permet de voir \\xE0 quel stade d\\u2019avancement nous nous trouvons pour le Sprint.\"), /*#__PURE__*/React.createElement(\"h3\", null, /*#__PURE__*/React.createElement(\"b\", null, \"Trello\")), /*#__PURE__*/React.createElement(\"h4\", null, \"Pendant chaque inter-sprint, nous mettons chaques features et id\\xE9es dans un tableau sur \", /*#__PURE__*/React.createElement(\"b\", null, \"Trello\"), \".\"), /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"img\", {\n    src: \"https://i.imgur.com/4cREnyu.png\",\n    className: classes.img3\n  }), /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"h3\", null, /*#__PURE__*/React.createElement(\"b\", null, \"Slack\")), /*#__PURE__*/React.createElement(\"h4\", null, \"Pour avoir une bonne communication et un bon suivi de chaque d\\xE9veloppeur, nous utilisons \", /*#__PURE__*/React.createElement(\"b\", null, \"Slack\"), \" avec un int\\xE9gration \", /*#__PURE__*/React.createElement(\"b\", null, \"GitHub\"), \", ce qui nous permet ainsi de voir les commits de chacun pour chaque projet.\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: \"https://i.imgur.com/dnO0LMJ.png\",\n    className: classes.img5\n  })))));\n}","map":{"version":3,"sources":["/Users/auguste/Documents/Dev/EIP/Github/Documentation/src/views/Blog/TechnicalDocumentation/Tools.js"],"names":["React","ReactMarkdown","makeStyles","GridContainer","GridItem","Header","HeaderLinks","styles","Sidebar","useStyles","Tools","props","classes","rest","main","height","color","marginLeft","img4","img3","img5"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,SAASC,UAAT,QAA2B,0BAA3B,C,CAEA;AAEA;;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,WAAP,MAAwB,kCAAxB;AAEA,OAAOC,MAAP,MAAmB,oDAAnB,C,CAEA;;AAEA,OAAOC,OAAP,MAAoB,sCAApB;AACA,IAAMC,SAAS,GAAGP,UAAU,CAACK,MAAD,CAA5B;AAEA,eAAe,SAASG,KAAT,CAAeC,KAAf,EAAsB;AACjC,MAAMC,OAAO,GAAGH,SAAS,EAAzB;AADiC,MAEtBI,IAFsB,qBAEbF,KAFa;AAGjC,sBACI;AAAK,IAAA,SAAS,EAAEC,OAAO,CAACE;AAAxB,kBACI,oBAAC,MAAD;AACI,IAAA,KAAK,EAAC,OADV;AAEI,IAAA,KAAK,EAAC,aAFV;AAGI,IAAA,KAAK,MAHT;AAII,IAAA,UAAU,eAAE,oBAAC,WAAD,OAJhB;AAKI,IAAA,mBAAmB,EAAE;AACjBC,MAAAA,MAAM,EAAE,GADS;AAEjBC,MAAAA,KAAK,EAAE;AAFU;AALzB,KASQH,IATR,EADJ,eAYI,8CACI,oBAAC,aAAD,qBACI,oBAAC,QAAD,qBACI,+BADJ,eACU,+BADV,eACgB,+BADhB,eACsB,+BADtB,CADJ,eAII,oBAAC,QAAD,qBACI,oBAAC,OAAD,OADJ,CAJJ,eAOI,oBAAC,QAAD;AAAW,IAAA,KAAK,EAAE;AAACI,MAAAA,UAAU,EAAE;AAAb;AAAlB,kBACI,0DADJ,eAEI,+BAFJ,eAGI,4EAHJ,eAII,+BAJJ,eAKI,6CAAI,wCAAJ,CALJ,eAMI,wHAAsE,wCAAtE,8GANJ,eAQI,+BARJ,eASI;AAAK,IAAA,GAAG,EAAC,iCAAT;AAA2C,IAAA,SAAS,EAAEL,OAAO,CAACM;AAA9D,IATJ,eAUI,+BAVJ,eAWI,4LAAiI,oDAAjI,mGAXJ,eAaI,+BAbJ,eAcI;AAAK,IAAA,GAAG,EAAE,iCAAV;AAA6C,IAAA,SAAS,EAAEN,OAAO,CAACO;AAAhE,IAdJ,eAeI,+BAfJ,eAgBI,2HAA8D,uCAA9D,wIAhBJ,eAkBI,6CAAI,wCAAJ,CAlBJ,eAmBI,4IAA4F,wCAA5F,MAnBJ,eAoBI,+BApBJ,eAqBI;AAAK,IAAA,GAAG,EAAE,iCAAV;AAA6C,IAAA,SAAS,EAAEP,OAAO,CAACO;AAAhE,IArBJ,eAsBI,+BAtBJ,eAuBI,6CAAI,uCAAJ,CAvBJ,eAwBI,6IAA6F,uCAA7F,2CAA8H,wCAA9H,iFAxBJ,eA0BI;AAAK,IAAA,GAAG,EAAE,iCAAV;AAA6C,IAAA,SAAS,EAAEP,OAAO,CAACQ;AAAhE,IA1BJ,CAPJ,CADJ,CAZJ,CADJ;AAqDH","sourcesContent":["import React from \"react\";\nimport ReactMarkdown from 'react-markdown'\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n// @material-ui/icons\n\n// core components\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport Header from \"components/Header/Header.js\";\nimport HeaderLinks from \"components/Header/HeaderLinks.js\";\n\nimport styles from \"assets/jss/material-kit-react/views/userDocPage.js\";\n\n// Sections for this page\n\nimport Sidebar from \"components/Sidebar/Technical/Sidebar\";\nconst useStyles = makeStyles(styles);\n\nexport default function Tools(props) {\n    const classes = useStyles();\n    const { ...rest } = props;\n    return (\n        <div className={classes.main}>\n            <Header\n                color=\"white\"\n                brand=\"TechnoServs\"\n                fixed\n                rightLinks={<HeaderLinks />}\n                changeColorOnScroll={{\n                    height: 200,\n                    color: \"white\"\n                }}\n                {...rest}\n            />\n            <div>\n                <GridContainer>\n                    <GridItem>\n                        <br /><br /><br /><br />\n                    </GridItem>\n                    <GridItem>\n                        <Sidebar/>\n                    </GridItem>\n                    <GridItem  style={{marginLeft: \"220px\"}}>\n                        <h1>Documentation Technique</h1>\n                        <br/>\n                        <h2>Outils d'organisation et de communication</h2>\n                        <br/>\n                        <h3><b>Github</b></h3>\n                        <h4>Les outils d’organisation de TechnoServs sont la feature Issue de <b>GitHub</b>. Lorsque nous souhaitons implémenter une nouvelle feature, nous créons une Issue comme ci-dessous.\n                        </h4>\n                        <br/>\n                        <img src=\"https://i.imgur.com/9AJDDMF.png\" className={classes.img4}/>\n                        <br/>\n                        <h4>Dans cet exemple, nous mettons une description qui résume la tâche en une phrase, ainsi que la charge estimée, ainsi que la “<b>Definition of Done</b>” qui correspond à ceux que doit fonctionner une fois que la tâche est terminée.\n                        </h4>\n                        <br/>\n                        <img src={\"https://i.imgur.com/ZKUArm0.png\"} className={classes.img3}/>\n                        <br/>\n                        <h4>Une fois l’issue créée, elle se retrouve dans la colonne “<b>To Do</b>” dans notre tableau des issues. Ceci nous permet de voir à quel stade d’avancement nous nous trouvons pour le Sprint.\n                        </h4>\n                        <h3><b>Trello</b></h3>\n                        <h4>Pendant chaque inter-sprint, nous mettons chaques features et idées dans un tableau sur <b>Trello</b>.</h4>\n                        <br/>\n                        <img src={\"https://i.imgur.com/4cREnyu.png\"} className={classes.img3}/>\n                        <br/>\n                        <h3><b>Slack</b></h3>\n                        <h4>Pour avoir une bonne communication et un bon suivi de chaque développeur, nous utilisons <b>Slack</b> avec un intégration <b>GitHub</b>, ce qui nous permet ainsi de voir les commits de chacun pour chaque projet.\n                        </h4>\n                        <img src={\"https://i.imgur.com/dnO0LMJ.png\"} className={classes.img5}/>\n                    </GridItem>\n                </GridContainer>\n            </div>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}