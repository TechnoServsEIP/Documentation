{"ast":null,"code":"var _jsxFileName = \"/Users/auguste/Documents/Dev/EIP/Github/Documentation/src/views/Blog/TechnicalDocumentation/Tools.js\";\nimport React from \"react\";\nimport ReactMarkdown from 'react-markdown';\nimport { makeStyles } from \"@material-ui/core/styles\"; // @material-ui/icons\n// core components\n\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport Header from \"components/Header/Header.js\";\nimport HeaderLinks from \"components/Header/HeaderLinks.js\";\nimport styles from \"assets/jss/material-kit-react/views/userDocPage.js\"; // Sections for this page\n\nimport Sidebar from \"components/Sidebar/Technical/Sidebar\";\nvar useStyles = makeStyles(styles);\nvar markdown = 'Cette section à pour but d’établir un guide du développeur qui permettrait à toute personne rejoignant' + 'l\\'équipe de contribuer au projet en comprenant son état, sa structure, et la façon de contribuer, sans ' + 'avoir à nous solliciter pour obtenir les informations nécessaires.\\n' + 'TechnoServs est une solution de hosting de serveurs de jeux vidéos dans le cloud, avec des offres à la demande ' + 'pour chacun, en simplifiant chaques étapes du processus.\\n' + 'Notre architecture est basé sur un backend en language Go et un frontend en VueJS avec le framework Quasar. (voir Architecture)' + 'Nous utilisons GitHub comme outils de versioning et organisons nos tâches via Trello. Pour communiquer, nous utilisons Slack et Hangout. ' + '(voir Outils d’organisation et de communication)' + 'Notre serveur utilise l’API docker afin de gérer les containers, qui eux héberge un serveur de jeu. Nous avons mis à disposition une API' + 'afin de permettre à l’application web de gérer les serveurs de jeux. (voir Présentation des technologies)\\n' + 'La documentation de l’API est généré par Postman, elle reprend tous les endpoints permettant de gérer les offres, les utilisateurs et les' + 'serveurs de jeux. (voir API et interfaces)\\n' + 'Le linter officiel de golang est utilisé pour le backend. Le front utilise Eslint. (voir Norme du code)\\n' + 'Le backend utilise la librairie standard de test de golang et les github action afin d\\'automatiser les tests unitaires.' + ' Côté frontend le framework Jest a été intégré. (voir Tests)\\n' + 'Le déploiement de la solution est automatisé via github action.\\n' + 'Le dashboard est déployé sur Netlify. Le site se trouve sur le lien suivant: technoservs.ichbinkour.eu. (voir Déploiement de la solution)\\n';\nexport default function Tools(props) {\n  var classes = useStyles();\n  var rest = Object.assign({}, props);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.main\n  }, /*#__PURE__*/React.createElement(Header, Object.assign({\n    color: \"white\",\n    brand: \"TechnoServs\",\n    fixed: true,\n    rightLinks: /*#__PURE__*/React.createElement(HeaderLinks, null),\n    changeColorOnScroll: {\n      height: 200,\n      color: \"white\"\n    }\n  }, rest)), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(GridContainer, null, /*#__PURE__*/React.createElement(GridItem, null, /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"br\", null)), /*#__PURE__*/React.createElement(GridItem, null, /*#__PURE__*/React.createElement(Sidebar, null)), /*#__PURE__*/React.createElement(GridItem, {\n    style: {\n      marginLeft: \"220px\"\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", null, \"Documentation Technique\"), /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"h2\", null, \"Outils d'organisation et de communication\"), /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"h3\", null, /*#__PURE__*/React.createElement(\"b\", null, \"Github\")), /*#__PURE__*/React.createElement(\"img\", {\n    src: \"https://i.imgur.com/RAXMGMx.png\",\n    className: classes.img\n  }), /*#__PURE__*/React.createElement(ReactMarkdown, {\n    source: markdown\n  }), /*#__PURE__*/React.createElement(\"div\", null)))));\n}","map":{"version":3,"sources":["/Users/auguste/Documents/Dev/EIP/Github/Documentation/src/views/Blog/TechnicalDocumentation/Tools.js"],"names":["React","ReactMarkdown","makeStyles","GridContainer","GridItem","Header","HeaderLinks","styles","Sidebar","useStyles","markdown","Tools","props","classes","rest","main","height","color","marginLeft","img"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,SAASC,UAAT,QAA2B,0BAA3B,C,CAEA;AAEA;;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,WAAP,MAAwB,kCAAxB;AAEA,OAAOC,MAAP,MAAmB,oDAAnB,C,CAEA;;AAEA,OAAOC,OAAP,MAAoB,sCAApB;AACA,IAAMC,SAAS,GAAGP,UAAU,CAACK,MAAD,CAA5B;AACA,IAAMG,QAAQ,GACV,2GACA,0GADA,GAEA,sEAFA,GAIA,iHAJA,GAKA,4DALA,GAOA,iIAPA,GASA,2IATA,GAUA,kDAVA,GAYA,0IAZA,GAaA,6GAbA,GAeA,2IAfA,GAgBA,8CAhBA,GAkBA,2GAlBA,GAoBA,0HApBA,GAqBA,gEArBA,GAuBA,mEAvBA,GAyBA,6IA1BJ;AA6BA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACjC,MAAMC,OAAO,GAAGJ,SAAS,EAAzB;AADiC,MAEtBK,IAFsB,qBAEbF,KAFa;AAGjC,sBACI;AAAK,IAAA,SAAS,EAAEC,OAAO,CAACE;AAAxB,kBACI,oBAAC,MAAD;AACI,IAAA,KAAK,EAAC,OADV;AAEI,IAAA,KAAK,EAAC,aAFV;AAGI,IAAA,KAAK,MAHT;AAII,IAAA,UAAU,eAAE,oBAAC,WAAD,OAJhB;AAKI,IAAA,mBAAmB,EAAE;AACjBC,MAAAA,MAAM,EAAE,GADS;AAEjBC,MAAAA,KAAK,EAAE;AAFU;AALzB,KASQH,IATR,EADJ,eAYI,8CACI,oBAAC,aAAD,qBACI,oBAAC,QAAD,qBACI,+BADJ,eACU,+BADV,eACgB,+BADhB,eACsB,+BADtB,CADJ,eAII,oBAAC,QAAD,qBACI,oBAAC,OAAD,OADJ,CAJJ,eAOI,oBAAC,QAAD;AAAW,IAAA,KAAK,EAAE;AAACI,MAAAA,UAAU,EAAE;AAAb;AAAlB,kBACI,0DADJ,eAEI,+BAFJ,eAGI,4EAHJ,eAII,+BAJJ,eAKI,6CAAI,wCAAJ,CALJ,eAMI;AAAK,IAAA,GAAG,EAAC,iCAAT;AAA2C,IAAA,SAAS,EAAEL,OAAO,CAACM;AAA9D,IANJ,eAOI,oBAAC,aAAD;AAAe,IAAA,MAAM,EAAET;AAAvB,IAPJ,eAQI,gCARJ,CAPJ,CADJ,CAZJ,CADJ;AAoCH","sourcesContent":["import React from \"react\";\nimport ReactMarkdown from 'react-markdown'\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n// @material-ui/icons\n\n// core components\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport Header from \"components/Header/Header.js\";\nimport HeaderLinks from \"components/Header/HeaderLinks.js\";\n\nimport styles from \"assets/jss/material-kit-react/views/userDocPage.js\";\n\n// Sections for this page\n\nimport Sidebar from \"components/Sidebar/Technical/Sidebar\";\nconst useStyles = makeStyles(styles);\nconst markdown =\n    'Cette section à pour but d’établir un guide du développeur qui permettrait à toute personne rejoignant' +\n    'l\\'équipe de contribuer au projet en comprenant son état, sa structure, et la façon de contribuer, sans ' +\n    'avoir à nous solliciter pour obtenir les informations nécessaires.\\n' +\n\n    'TechnoServs est une solution de hosting de serveurs de jeux vidéos dans le cloud, avec des offres à la demande ' +\n    'pour chacun, en simplifiant chaques étapes du processus.\\n' +\n\n    'Notre architecture est basé sur un backend en language Go et un frontend en VueJS avec le framework Quasar. (voir Architecture)' +\n\n    'Nous utilisons GitHub comme outils de versioning et organisons nos tâches via Trello. Pour communiquer, nous utilisons Slack et Hangout. ' +\n    '(voir Outils d’organisation et de communication)' +\n\n    'Notre serveur utilise l’API docker afin de gérer les containers, qui eux héberge un serveur de jeu. Nous avons mis à disposition une API' +\n    'afin de permettre à l’application web de gérer les serveurs de jeux. (voir Présentation des technologies)\\n' +\n\n    'La documentation de l’API est généré par Postman, elle reprend tous les endpoints permettant de gérer les offres, les utilisateurs et les' +\n    'serveurs de jeux. (voir API et interfaces)\\n' +\n\n    'Le linter officiel de golang est utilisé pour le backend. Le front utilise Eslint. (voir Norme du code)\\n' +\n\n    'Le backend utilise la librairie standard de test de golang et les github action afin d\\'automatiser les tests unitaires.' +\n    ' Côté frontend le framework Jest a été intégré. (voir Tests)\\n'+\n\n    'Le déploiement de la solution est automatisé via github action.\\n' +\n\n    'Le dashboard est déployé sur Netlify. Le site se trouve sur le lien suivant: technoservs.ichbinkour.eu. (voir Déploiement de la solution)\\n';\n\n\nexport default function Tools(props) {\n    const classes = useStyles();\n    const { ...rest } = props;\n    return (\n        <div className={classes.main}>\n            <Header\n                color=\"white\"\n                brand=\"TechnoServs\"\n                fixed\n                rightLinks={<HeaderLinks />}\n                changeColorOnScroll={{\n                    height: 200,\n                    color: \"white\"\n                }}\n                {...rest}\n            />\n            <div>\n                <GridContainer>\n                    <GridItem>\n                        <br /><br /><br /><br />\n                    </GridItem>\n                    <GridItem>\n                        <Sidebar/>\n                    </GridItem>\n                    <GridItem  style={{marginLeft: \"220px\"}}>\n                        <h1>Documentation Technique</h1>\n                        <br/>\n                        <h2>Outils d'organisation et de communication</h2>\n                        <br/>\n                        <h3><b>Github</b></h3>\n                        <img src=\"https://i.imgur.com/RAXMGMx.png\" className={classes.img}/>\n                        <ReactMarkdown source={markdown}/>\n                        <div>\n                        </div>\n                    </GridItem>\n                </GridContainer>\n            </div>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}